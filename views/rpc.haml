%section{class: "topic rpc #{rpc['meta']['accessibility']}", id: "#{rpc['id']}"}
  .topic-description
    .title= rpc['name']

    .meta
      - rpc['meta'].each do |key, value|
        %span.meta-record
          %span.meta-record-key>= key.gsub(/_/, ' ')
          \:
          %span.meta-record-value= value.gsub(/_/, ' ')

    .links
      - if rpc.dig('links', 'discussion')
        %a{href: rpc['links']['discussion'], target: '_blank'}
          = fa('comments-o').lg

    / .call-spec
    /   %pre
    /     = rpc['spec']['call']
    /     %br
    /     = "-> #{rpc['spec']['return']}"

    .description
      :markdown
        #{rpc['description']}

    %table.parameters
      %thead
        %tr
          %th Parameter
          %th Type
          %th Description

      %tbody
        - rpc['parameters'].each do |param|
          %tr
            %td.name= param['name']
            %td.type
              = param['type']
              - unless param['required']
                %br
                %span.optional= '(optional)'
            %td.description= param['description']


  .topic-samples
    %ul.sample-select
      - is_first = true
      - rpc['samples'].each do |name, _|
        - rpc_id    = rpc_id_for(rpc)
        - sample_id = sample_id_for(rpc, name)
        %input{checked: is_first, 'data-content-target': "proto_sample_#{sample_id}", id: sample_id, name: rpc_id, type: "radio"}
        %label{for: "#{sample_id}"}= name
        - is_first = false

    - rpc['samples'].each do |name, sample|
      - sample_id = sample_id_for(rpc, name)
      .sample{id: "proto_sample_#{sample_id}"}
        .sample-content
          .request
            :markdown
              ```ruby
              #{sample['call']}
              ```
          .response
            :markdown
              ```ruby
              #{sample['return']}
              ```
