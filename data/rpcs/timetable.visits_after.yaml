name: timetable.visits_after
id: timetable_visits_after
spec:
  call: 'timetable.visits_after(station, start, route?, limit)'
  return: '[(eta, etd, route_short_name, headsign), ...]'
meta:
  since: v0.1
  accessibility: public
  minimum_role: consumer


description: |-
  Returns an ordered list of estimated departures from the given `station`, where the departure time is at or after `start`. The arrival time of the visit may be before `start`, depending on the scheduled [dwell time](https://en.wikipedia.org/wiki/Terminal_dwell_time) of the underlying `stop_time`.

  The `route` parameter is optional. When given, it is expect to match the `short_name` of a route that the agency provides. In this case, visits from other routes are excluded from the result list. When omitted, all visits (regardless of route) are included in the result list. To retrieve visits for only a select set of routes, make a separate call for each route.

  Note that `limit` is only an upper-bound on the number of results that may be returned. If fewer than `limit` visits are active after `start`, the result list will only contain that many entries. That is, the size of the result list is `min(active_visits, limit)`.

  If the result list contains no entries, an empty array will be returned.


parameters:
  - name: station
    type: String
    required: true
    description: The identifier of a station of arrival for visits.
  - name: start
    type: DateTime
    required: true
    description: The earliest time that a visit should be considered for inclusion.
  - name: route
    type: String
    required: false
    description: The identifier of a route to filter visits by.
  - name: limit
    type: Integer
    required: true
    description: The maximum number of visits to return.


samples: |-
  timetable.visits_after('BUS215', '20170130 06:45:00', 6)
  #=>
  [
    ['20170130 06:45:00', '20170130 06:45:00', '1B', 'to Walmart'],
    ['20170130 06:35:00', '20170130 06:45:00', '5',  'to Salisbury'],
    ['20170130 06:50:00', '20170130 06:50:00', '1B', 'to Walmart'],
    ['20170130 06:45:00', '20170130 06:50:00', '27', 'to Downtown'],
    ['20170130 06:55:00', '20170130 06:55:00', '1B', 'to Walmart'],
    ['20170130 07:00:00', '20170130 07:00:00', '1B', 'to Walmart']
  ]


  # Notice how after the first result, entries have wrapped to the next day.
  timetable.visits_after('BUS215', '20170129 20:45:00', '1B', 5)
  #=>
  [
    ['20170129 20:45:00', '20170129 20:45:00', '1B', 'to Walmart'],
    ['20170130 06:45:00', '20170130 06:45:00', '1B', 'to Walmart'],
    ['20170130 06:50:00', '20170130 06:50:00', '1B', 'to Walmart'],
    ['20170130 06:55:00', '20170130 06:55:00', '1B', 'to Walmart'],
    ['20170130 07:00:00', '20170130 07:00:00', '1B', 'to Walmart']
  ]
