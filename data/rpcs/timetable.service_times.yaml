name: timetable.service_times
id: timetable_service_times
spec:
  call: 'timetable.service_times(station, route)'
  return: '[(date, [((start, end), interval), ...]), ...]'
meta:
  since: v0.1
  accessibility: public
  minimum_role: consumer
links:
  discussion: https://github.com/propershark/proto/issues/1


description: |-
  Returns a 7-element array containing visit intervals for each day in the week following the date on which the call is made. The first entry represents the date the call is made, and the last entry represents the date one week after the previous day. For example, a request made on a Saturday will contain intervals for Saturday through the following Friday.

  A visit interval is a two-element tuple containing a **time range** (the times between which the interval applies) and a **duration** (the time between arrivals during that time range, represented in minutes). Each date is represented by another two-element tuple containing the date that the entry applies to and a list of visit intervals.

  Dates with only one visit interval still contain an array of visit intervals, the list is just one element long. Dates with no service (0 visit intervals), will contain an empty array.

  Intervals that wrap the midnight boundary represent the end of their time range as a duration since the most recent midnight. In most cases, the end of the interval will occur before the start of the first visit interval on the following day.

  All dates and times are relative to the timezone defined by the agency.

parameters:
  - name: station
    type: String
    required: true
    description: The identifier of the station in question.
  - name: route
    type: String
    required: true
    description: The route for which visit intervals are calculated.


samples: |-
  # Assuming this call is made on 20170325, the first entry is a Saturday. The
  # final entry, then, is the following Friday.
  timetable.service_times('BUS123', '1B')
  #=>
  [
    ('20170325', [(('06:45:00', '07:50:00'), 10.0), # 6:45am-7:50am, 10 min.
                  (('08:00:00', '16:55:00'), 5.0),  # 8:00am-4:55pm, 5 min.
                  (('17:00:00', '22:50:00'), 20.0)] # etc...
    ),
    # Dates with only one interval record will still contain that record in an
    # array to maintain consistency.
    ('20170326', [(('00:00:00', '00:00:00'), 2.0)]),
    # Same for dates with no intervals. The array will be blank.
    ('20170327', []),
    # Even if multiple dates contain the same interval records, they will be
    # listed as distinct service records. It is the client's responsibility to
    # group these records by date if desired.
    ('20170328', [(('06:45:00', '07:50:00'), 1.0),
                  (('08:00:00', '16:55:00'), 0.0),
                  (('17:00:00', '22:50:00'), 1.0)]
    ),
    # The last visit interval for this date ends at 2:50am the following day. It is
    # represented as `02:50:00` instead of `26:50:00` for better compatibility
    # across DateTime parsing libraries.
    ('20170329', [(('06:45:00', '07:50:00'), 1.0),
                  (('08:00:00', '16:55:00'), 0.0),
                  (('17:00:00', '02:50:00'), 1.0)]
    ),
    ('20170330', []),
    ('20170331', [])
  ]
