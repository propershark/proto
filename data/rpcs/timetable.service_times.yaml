name: Timetable.service_times
id: timetable_service_times
spec:
  call: 'timetable.service_times(station : String, route : String)'
  return: '[(date-of-service, [((start-time, end-time), visit-interval), ...]), ...]'
meta:
  since: v0.1
  accessibility: public
  minimum_role: consumer
links:
  discussion: https://github.com/propershark/proto/issues/1


description: |-
  If the result list contains no entries, an empty array will be returned.


parameters: []


samples:
  Default:
    call: |-
      timetable.service_times('BUS123', '1B')
    return: |-
      [
        (20170325, [
            ((06:45:00, 07:50:00), 00:00:10),
            ((08:00:00, 16:55:00), 00:00:05),
            ((17:00:00, 22:50:00), 00:00:20)
          ]
        ),
        (20170326, [
            ((00:00:00, 03:00:00), 00:00:20),
            ((09:00:00, 22:00:00), 00:00:10),
            ((22:00:00, 03:00:00), 00:00:30)
          ]
        ),
        (20170327, []),
        (20170328, [
            ((06:45:00, 07:50:00), 00:00:10),
            ((08:00:00, 16:55:00), 00:00:05),
            ((17:00:00, 22:50:00), 00:00:10)
          ]
        )
        ...
      ]

  Commented:
    call: |-
      timetable.service_times('BUS123', '1B')
    return: |-
      // Array of service records.
      // This array will always contain 7 entries, each one representing a day of the
      // week. The first entry will always correspond to the current date according
      // to the RPC provider.
      // In this example, the first entry is a Saturday. The final entry would be the
      // following Friday.
      [
        // Service record
        (
          // Date of service entry
          20170325, // = Saturday
          // Array of visit intervals
          [
            // Interval record
            (
              // time range of visit interval
              (06:45:00, 07:50:00),
              // visit interval
              00:00:10
            ),
            // mid-day changes to a service's visit interval are represented as
            // separate elements in the intervals array.
            ((08:00:00, 16:55:00), 00:00:05), // = 8am- 4:55pm, every  5 minutes
            ((17:00:00, 22:50:00), 00:00:10)  // = 5pm-10:50pm, every 10 minutes
          ]
        ),

        // Dates with only one interval record will still contain that record in an
        // array to maintain consistency.
        (
          20170326, // = Sunday
          [
            ((00:00:00, 03:00:00), 00:00:30),  // = 5pm-10:50pm, every 10 minutes
            ((09:00:00, 22:00:00), 00:00:30),
            // Intervals that wrap the midnight boundary represent the end of their
            // time range as a duration since the most recent midnight. This *should*
            // never be later than the start of the time range.
            ((22:00:00, 03:00:00), 00:00:30)  // = 5pm-10:50pm, every 10 minutes
          ]
        ),

        // For consistency, dates on which no service is provided will contain a blank
        // array value.
        (
          20170327, // = Monday
          []
        ),

        // Even if multiple dates contain the same interval records, they will be
        // listed as distinct service records. It is the client's responsibility to
        // group these records by date if desired.
        (
          20170328, // = Tuesday
          [
            ((06:45:00, 07:50:00), 00:00:10),
            ((08:00:00, 16:55:00), 00:00:05),
            ((17:00:00, 22:50:00), 00:00:10)
          ]
        )

        ...
      ]
