!!!
%html
  %head
    %title Proper Shark Protocol
    %link(rel="stylesheet" href="styles/normalize.css")
    %link(rel="stylesheet" href="styles/main.css")
    %link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous")

  %body
    :ruby
      def fa icon_name
        "<span class='fa #{icon_name}'></span>"
      end

      @rpcs = Dir['data/rpcs/*.yaml'].map{ |f| YAML.load_file(f) }

      def rpc_id_for rpc
        "#{rpc['id']}"
      end

      def sample_id_for rpc, sample_name
        "#{rpc['id']}_#{sample_name.gsub(/\W/, '-')}"
      end



    .container
      %nav.nav
        %h1 Proper Shark Protocol

        %ul
          - @rpcs.each do |rpc|
            %li
              %a{href: "##{rpc['id']}"}
                = rpc['name']


      .protocol
        - @rpcs.each do |rpc|
          %div{class: "proto-action #{rpc['meta']['accessibility']}"}
            .proto-title{id: "#{rpc['id']}"}
              .proto-links
                - if rpc.dig('links', 'discussion')
                  %a{href: rpc['links']['discussion'], target: '_blank'}
                    = fa 'fa-lg fa-comments-o'

              %pre= rpc['name']
              .proto-meta
                - rpc['meta'].each do |key, value|
                  %span.proto-meta-record
                    %span.proto-meta-record-key>= key.gsub(/_/, ' ')
                    \:
                    %span.proto-meta-record-value= value.gsub(/_/, ' ')


            .proto-call-spec
              %pre
                = rpc['spec']['call']
                %br
                = "-> #{rpc['spec']['return']}"


            .proto-description
              :markdown
                #{rpc['description']}


            .proto-samples
              %ul.proto-sample-select
                - is_first = true
                - rpc['samples'].each do |name, _|
                  - rpc_id    = rpc_id_for(rpc)
                  - sample_id = sample_id_for(rpc, name)
                  %input{checked: is_first, 'data-content-target': "proto_sample_#{sample_id}", id: sample_id, name: rpc_id, type: "radio"}
                  %label{for: "#{sample_id}"}= name
                  - is_first = false

              - rpc['samples'].each do |name, sample|
                - sample_id = sample_id_for(rpc, name)
                .proto-sample{id: "proto_sample_#{sample_id}"}
                  .proto-sample-content
                    .request
                      %pre
                        %code= html_escape(sample['call'])
                    .response
                      %pre
                        %code= html_escape(sample['return'])



  %script(src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha256-/SIrNqv8h6QGKDuNoLGA4iret+kyesCkHGzVUUV0shc=" crossorigin="anonymous")

  :javascript
    $('.proto-action').each(function() {
      $(this).find('.proto-sample').first().toggleClass("visible");
    });

    $('input[type=radio]').change(function() {
      $(this).closest('.proto-action').find(".proto-sample.visible").toggleClass("visible", false);
      $('[id="'+$(this).data('content-target')+'"]').toggleClass("visible", $(this).checked);
    });
